[Number of Links Created by Link Type and User]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.axisTitleX.text = User
display.visualizations.charting.axisTitleY.text = Number of Links Created
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = link.create OR link.set_password | \
    spath | \
    rename caller as user_id | \
    stats \
        count(eval(event=="link.create")) AS "Regular Links", \
        count(eval(event=="link.set_password")) AS "Password Links", \
        count(eval(event=="link.set_expiry")) AS "Set Expiry Links", \
        count(eval(event=="link.set_password" AND event=="link.set_expiry")) AS "Password & Set Expiry Links", \
    BY user_id | \
    sort -"Regular Links"

[Number of Links Created by User]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.axisTitleX.text = User
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = link.create | \
   spath | \
      rename caller as user_id | \
      rename soid.sid as store_id | \
      rename soid.oid as object_id | \
      rename path.relative_path as path | \
   stats count as "Number of Links Created" by user_id | \
      sort -"Number of Links Created"

[Number of QR Codes Generated vs. Mobile Devices Certified]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.axisTitleX.text = Event
display.visualizations.charting.axisTitleY.text = Number of Occurrences
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = user.* OR link.* OR device.* | \
    spath | \
    rename user as user_id | \
    stats \
        count(eval(event=="device.mobile.code")) as qr_code_generations, \
        count(eval(event=="device.certify" AND device_type=="API Client")) as mobile_device_certifications \
    BY sourcetype

[Number of Access Events by User]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.axisTitleX.text = User
display.visualizations.charting.chart = line
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = * | \
    spath | \
    rename user as user_id | \
    eval user_id=if(user_id==":2","Team Server",user_id) | \
    stats \
        count(eval(event=="user.signin" AND authority=="Credential")) as num_web_sign-ins, \
        count(eval(event=="device.certify" AND device_type=="Desktop Client")) as num_desktop_client_certifications, \
        count(eval(event=="device.mobile.code")) as num_qr_code_generations, \
        count(eval(event=="device.certify" AND device_type=="API Client")) as num_mobile_device_certifications \
    BY user_id

[Number of Files Created, Modified, Deleted by User]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","operations{}"]
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.chart = line
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = file.notification | \
    spath | \
    rename verified_submitter.user_id as user_id | \
    eval user_id=if(user_id==":2","Team Server",user_id) | \
    eval ops=mvjoin('operations{}', " ") | \
    stats \
        count(eval(ops=="CREATE MODIFY" OR ops=="CREATE")) as num_files_created, \
        count(eval(ops=="MODIFY")) as num_files_modified, \
        count(eval(ops=="DELETE")) as num_files_deleted \
    BY user_id

[File Events Table]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = file.notification | \
    spath | \
    rename path.relative_path as "file path" | \
    eval operations=mvjoin('operations{}', ", ") | \
    rename verified_submitter.user_id as user_id | \
    rename soid.oid as object_id | \
    rename soid.sid as store_id | \
    eval user_id=if(user_id==":2","Team Server",user_id) | \
    table user_id operations "file path" object_id store_id event_time

[Number of Org Invitations Sent vs. Accepted]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.axisTitleX.text = Invitations
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = user.* | \
    spath | \
    stats \
        count(eval(event=="user.org.invite")) as num_org_invitations_sent, \
        count(eval(event=="user.org.signup")) as num_org_invitations_accepted \
    BY sourcetype

[Number of Shared Folder Invitations Sent by User]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.axisTitleX.text = User
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = folder.invite | \
    spath | \
    rename caller.email as user_id | \
    stats \
        count(eval(event=="folder.invite")) as num_folder_invitations_sent \
    BY user_id | \
    sort -num_folder_invitations

[Comparison of Total Number of Desktop and Web File Creations]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","operations{}"]
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.axisTitleX.text = File Creation Type
display.visualizations.charting.axisTitleY.text = Number of File Creations
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisStart
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = file.notification | \
    spath | \
    rename verified_submitter.user_id as user_id | \
    eval ops=mvjoin('operations{}', " ") | \
    stats \
        count(eval(ops=="CREATE MODIFY")) as desktop, \
        count(eval(ops=="CREATE" AND isnotnull(mobile_user))) as web \
    by sourcetype

[Number of Desktop File Creations by User]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","operations{}"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.axisTitleX.text = File Creation Type
display.visualizations.charting.axisTitleY.text = Number of File Creations
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisStart
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = file.notification | \
    spath | \
    rename verified_submitter.user_id as user_id | \
    eval user_id=if(user_id==":2","Team Server",user_id) | \
    eval ops=mvjoin('operations{}', " ") | \
    stats \
        count(eval(ops=="CREATE MODIFY")) as desktop \
    BY user_id | \
    sort \
        -desktop

[Number of Web File Creations by User]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","operations{}"]
display.general.type = statistics
display.page.search.mode = verbose
display.visualizations.charting.axisTitleX.text = File Creation Type
display.visualizations.charting.axisTitleY.text = Number of File Creations
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisStart
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = file.notification | \
    spath | \
    rename verified_submitter.user_id as user_id | \
    eval user_id=if(user_id==":2","Team Server",user_id) | \
    eval ops=mvjoin('operations{}', " ") | \
    stats \
        count(eval(ops=="CREATE" AND isnotnull(mobile_user))) as web \
    BY mobile_user | \
    sort \
        -web

[Completed Transfers Table]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","operations{}"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisStart
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = file.transfer CONTENT_COMPLETED | \
    spath | \
    rename verified_submitter.device_id as src_device | \
    rename verified_submitter.user_id as src_user | \
    rename soid.sid as sid | \
    rename soid.oid as oid | \
    rename destination_device as dst_device | \
    rename destination_user as dst_user | \
    rename path.relative_path as path | \
    eval timestamp = strftime(_time, "%m/%d/%y %I:%M:%S:%p") | \
    table timestamp, src_user, dst_user, src_device, dst_device, sid, oid, path | \
    eval src_user = if (src_user == ":2", "Team Server", src_user) | \
    eval dst_user = if (dst_user == ":2", "Team Server", dst_user) | \
join dst_device \
    [ \
        search device.signin | \
        spath | \
        rename device_id as dst_device | \
        rename ip as dst_ip | \
        table dst_device, dst_ip \
    ] | \
join src_device \
    [ \
        search device.signin | \
        spath | \
        rename device_id as src_device | \
        rename ip as src_ip | \
        table src_device, src_ip \
    ] | \
table timestamp, src_user, dst_user, src_device, dst_device, src_ip, dst_ip, sid, oid, path
